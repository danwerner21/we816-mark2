Name     GAL-U16 ;       /*   PHI2 -> 1|  |_|  |20<- VCC     */
PartNo   1;              /*    VDA -> 2|       |19-<>        */
Date     12/04/2010;     /*    VPA -> 3|       |18-<>        */
Revision 01;             /*    RWB -> 4|       |17-<>        */
Designer Daryl Rictor;   /*    VID -> 5|       |16-> ws2     */
Company  ;               /*    ROM -> 6|       |15-> ws1     */
Assembly ;               /*    IO  -> 7|       |14-> RDY     */
Location ;               /*     <> -> 8|       |13-> FF2     */
Device   g16v8a;         /*   /RES -> 9|       |12-> FF1     */
Format   j;              /*    GND ->10|_______|11<- GND     */

/*********************************************************************************/
/*                                                                               */
/*  This program and its associated documentation are provided for your personal */
/*  use only and appear here exclusively by permission of the copyright holder.  */
/*  Please contact the copyright holder before re-distributing, re-publishing    */
/*  or disseminating this copyrighted work. This code is not GPL or in the       */
/*  public domain. Please respect the author's copyright.                        */
/*                                                                               */
/*  No waranty, either expressed or implied, are given.  I assume no liability   */
/*  for its use in any project or device.                                        */
/*                                                                               */
/*  Your use of this program indicates your acceptance of all license terms.     */
/*  This particular version is freeware as long as the copyright messages are    */
/*  left intact.                                                                 */
/*                                                                               */
/*********************************************************************************/
/* Modified for the WE816-Mark2 by Dan Werner                                    */
/*********************************************************************************/

/* INPUTS  */

pin 1     = clk;                        /* FF clock input */
pin 11    = oe;                         /* FF Output Enable */

pin 2     = VDA;                        /* MPU valid data address */
pin 3     = VPA;                        /* MPU valid program address */
pin 4     = RWB;                        /* MPU read/write */
pin 5     = !VIDEO_WS;                  /* Video 2 wait state */
pin 6     = !CS_ROM;                    /* ROM 1 wait state */
pin 7     = !IO;                        /* IO 1 wait State */
pin 9     = RES;                        /* system /RES input */

/* OUTPUTS */

pin 12    = FF1;                        /* Flip-Flop 1 */
pin 13    = FF2;                        /* Flip-Flop 2 */
pin 14    = RDY;                        /* MPU RDY signal */
pin 15    = ws1;
pin 16    = ws2;

/* Combinatorial OUTPUTS */

ws2       = VIDEO_WS # IO;              /* OR all logic elements that require 2 wait states */
ws1       = ws2 # CS_ROM                /* OR ws2 with all logic elements that require 1 wait state */
RDY.oe    = ws1 ;                       /* tri-state RDY when not needed */
RDY       = !FF1 & !FF2;                /* condition MPU RDY input */

/* Register OUTPUTS */

FF1.d = (ws1 # ws2) & !FF1 & !FF2 & RES;   /* FF1 holds wait state #1 */
FF2.d = ws2 & !FF2 & FF1 & RES;            /* FF2 holds wait state #2 */

/* End */
